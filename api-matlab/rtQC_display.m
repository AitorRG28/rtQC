%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Copyright (C) rtQC Dev-Team
%
% This program is free software; you can redistribute it and/or
% modify it under the terms of the GNU General Public License
% as published by the Free Software Foundation; either version 3
% of the License, or (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,USA.
%
% Author: Stephan Heunis, <j.s.heunis@tue.nl>, 2018
%
% Function rtQC_display
%
% Description: rtQC GUI
% 
% Parameters:
%
% Returns:
% 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


function rtQC_display()

% Create GUI and tabs
fig = figure('Visible','off',...
    'Name', 'rtQC',...
    'NumberTitle','off',...
    'units','normalized',...
    'outerposition', [0 0 1 1],...
    'MenuBar', 'none',...
    'ToolBar', 'none');
tgroup = uitabgroup('Parent', fig,...
    'SelectionChangedFcn', @tabChangedCallback);
tab_info = uitab('Parent', tgroup, 'Title', 'Info');
tab_pre = uitab('Parent', tgroup, 'Title', 'Pre-NF QC');
tab_online = uitab('Parent', tgroup, 'Title', 'Online QC');
tab_post = uitab('Parent', tgroup, 'Title', 'Post-NF QC');

% setupInfo(tab_info)
% setupPreQC(tab_pre)
setupOnlineQC(tab_online)
% setupPostQC(tab_post)

set(findall(fig, '-property', 'Units'), 'Units', 'Normalized')
fig.Visible = 'on';

end


function tabChangedCallback(src, eventdata)

% Get the Title of the previous tab
tabName = eventdata.OldValue.Title;
% tabName = eventdata.NewValue.Title;
assignin('base', 'eventdata', eventdata)
assignin('base', 'src', src)

switch tabName
    case src.Children(1).Title
        %
    case src.Children(2).Title
        %
    case src.Children(3).Title
        %
    case src.Children(4).Title
        %
    otherwise
        %
end

end




function setupOnlineQC(tab)

tgroup = tab.Parent;
fig = tgroup.Parent;
fontsize = 13;
button_fontsize = 15;
Ndims = [20 44 46];
slice_number = 10;


title_1 = 'Unprocessed volume #';
title_2 = 'tSNR image';
title_3 = 'HMPs: translation';
title_4 = 'HMPs: rotation';
title_5 = 'FD';
title_6 = 'DVARS';
title_7 = 'THEPLOT';

% Create UIcontrols
% Position = [left bottom width height]


panel_settings = uipanel('Parent', tab,...
    'Title','Settings',...
    'Position',[.02 .8 .36 .18],...
    'fontsize', fontsize);
panel_controls = uipanel('Parent', tab,...
    'Title','Controls',...
    'Position',[.02 .64 .36 .14],...
    'fontsize', fontsize);
panel_volumes = uipanel('Parent', tab,...
    'Title','Real-time Volume Display',...
    'Position',[.02 .02 .36 .59],...
    'fontsize', fontsize);
panel_rtvalues = uipanel('Parent', tab,...
    'Title','Real-time Metrics',...
    'Position',[.4 .8 .58 .18],...
    'fontsize', fontsize);
panel_rtplots = uipanel('Parent', tab,...
    'Title','Real-time QC Display',...
    'Position',[.4 .02 .58 .76],...
    'fontsize', fontsize);

% panel_controls.Visible = 'on';


pb_startPreProc = uicontrol('Parent', panel_controls,...
    'Style', 'push',...
    'String', 'PRE-PROC', ...
    'Units', 'Normalized',...
    'Position', [0.05 0.3 0.25 0.45],...
    'CallBack', @startPreProc, ...
    'UserData', 0,...
    'fontsize', button_fontsize);
pb_startRtSim = uicontrol('Parent', panel_controls,...
    'Style', 'push',...
    'String', 'START', ...
    'Units', 'Normalized',...
    'Position', [0.35 0.3 0.25 0.45],...
    'CallBack', @startRtSim, ...
    'UserData', 0,...
    'fontsize', button_fontsize);
pb_stopRtSim = uicontrol('Parent', panel_controls,...
    'Style', 'push',...
    'String', 'STOP', ...
    'Units', 'Normalized',...
    'Position', [0.65 0.3 0.25 0.45],...
    'CallBack', @stopRtSim, ...
    'UserData', 0,...
    'fontsize', button_fontsize);

txt_Nvolume = uicontrol('Parent', panel_rtvalues,...
    'Style','text',...
    'String','#0',...
    'Position',[100 650 70 40],...
    'fontsize', fontsize);
txt_2 = uicontrol('Parent', panel_rtvalues,...
    'Style','text',...
    'String','REAL-TIME INFO:',...
    'Position',[20 590 100 40],...
    'fontsize', fontsize);
txt_out = uicontrol('Parent', panel_rtvalues,...
    'Style','text',...
    'String','Outliers (FD):',...
    'Position',[20 560 70 40],...
    'fontsize', fontsize);
txt_out_val = uicontrol('Parent', panel_rtvalues,...
    'Style','text',...
    'String','0',...
    'Position',[100 560 70 40],...
    'fontsize', fontsize);
txt_fdsum = uicontrol('Parent', panel_rtvalues,...
    'Style','text',...
    'String','FD sum:',...
    'Position',[20 520 70 40],...
    'fontsize', fontsize);
txt_fdsum_val = uicontrol('Parent', panel_rtvalues,...
    'Style','text',...
    'String','0',...
    'Position',[100 520 70 40],...
    'fontsize', fontsize);
txt_fdave = uicontrol('Parent', panel_rtvalues,...
    'Style','text',...
    'String','FD average:',...
    'Position',[20 480 70 40],...
    'fontsize', fontsize);
txt_fdave_val = uicontrol('Parent', panel_rtvalues,...
    'Style','text',...
    'String','0',...
    'Position',[100 480 70 40],...
    'fontsize', fontsize);

txt_plane = uicontrol('Parent', panel_volumes,...
    'Style','text',...
    'String','Select plane',... 
    'Position',[20 210 100 40],...
    'Visible','off',...
    'fontsize', fontsize);
popup = uicontrol('Parent', panel_volumes,...
    'Style', 'popup',...
    'String', {'dim1 (X)','dim2 (Y)','dim3 (Z)'},...
    'Position', [20 180 100 40],...
    'Value', 3,...
    'Visible','off',...
    'Callback', @setDim);
txt_slice = uicontrol('Parent', panel_volumes,...
    'Style','text',...
    'String',['Change slice: #' num2str(slice_number)],...
    'Position',[20 300 100 40],...
    'Visible','off',...
    'fontsize', fontsize);
sld_slice = uicontrol('Parent', panel_volumes,...
    'Style', 'slider',...
    'Position', [20 270 100 40],...
    'Min',1,...
    'Max',Ndims(popup.Value),...
    'Value',slice_number,...
    'SliderStep', [1/Ndims(popup.Value) 1/Ndims(popup.Value)],...
    'Visible','off',...
    'Callback', @changeSlice);



% Axes




% % Create axes
% ax1 = subplot(7,4,[17 21 25]); % Unprocessed dynamic image
% imagesc(squeeze(f4D_img(:,:,slice_number,1))); title(title_1);  colormap bone; colorbar;
% 
% ax2 = subplot(7,4,[18 22 26]); % tSNR image
% imagesc(squeeze(f4D_img(:,:,slice_number,1))); title(title_2); colormap bone; colorbar;
% 
% ax3 = subplot(7,4,[3 4]); % HMPs - translation
% hold on;
% title(title_3, 'fontsize', fontsize);
% p1 = plot(ax3, t, MPall{1}, 'r');
% p2 = plot(ax3, t, MPall{2}, 'b');
% p3 = plot(ax3, t, MPall{3}, 'g');
% set(ax3, 'Color', 'k');
% set(ax3,'Xticklabel',[]);
% axis([0 (Nt+5) -1 1]);
% ylabel('mm', 'fontsize', fontsize)
% grid;
% hold off;
% 
% ax4 = subplot(7,4,[7 8]); % HMPs - rotation
% hold on;
% title(title_4, 'fontsize', fontsize);
% p4 = plot(ax4, t, MPall{4}, 'r');
% p5 = plot(ax4, t, MPall{5}, 'b');
% p6 = plot(ax4, t, MPall{6}, 'g');
% set(ax4, 'Color', 'k');
% set(ax4,'Xticklabel',[]);
% axis([0 (Nt+5) -0.02 0.02]);
% ylabel('rad', 'fontsize', fontsize)
% grid;
% hold off;
% 
% ax5 = subplot(7,4,[11 12]); % Framewise displacement
% p8 = plot(ax5, t, FD, 'c');
% set(ax5, 'Color', 'k');
% set(ax5,'Xticklabel',[]);
% title(ax5, title_5, 'fontsize', fontsize);
% ylabel('mm', 'fontsize', fontsize)
% axis([0 (Nt+5) 0 2]);
% grid;
% 
% ax6 = subplot(7,4,[15 16]); % DVARS
% p7 = plot(ax6, t, DVARS, 'r');
% set(ax6, 'Color', 'k');
% set(ax6,'Xticklabel',[]);
% title(ax6, title_6, 'fontsize', fontsize);
% axis([0 (Nt+5) 0 1000]);
% ylabel('a.u.', 'fontsize', fontsize)
% grid;

end


% assignin('base', 'src',src)
% assignin('base', 'eventdata',eventdata)